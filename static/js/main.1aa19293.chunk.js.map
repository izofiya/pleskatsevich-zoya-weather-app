{"version":3,"sources":["components/title.js","components/form.js","components/weather.js","App.js","index.js"],"names":["Title","props","react_default","a","createElement","className","site","Form","onSubmit","weatherMethod","type","name","placeholder","Weather","temp","city","country","wind","error","API","API2","App","state","undefined","temp2","city2","country2","wind2","error2","isActiveOpenWeatherMap","isActiveApixu","gettingWeather","_callee","evt","api_url","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","concat","sent","json","_this","setState","main","sys","speed","time","stop","gettingWeatherApixu","_callee2","_context2","current","temp_c","location","wind_mph","getOpenWeatherMap","getApixu","onClick","this","title","components_form","weather","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1aa19293.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Title = props => (\r\n    <div className=\"infoDiv\">\r\n        <h2>Find out the weather forecast on the {props.site}</h2>\r\n    </div>\r\n);\r\n\r\nexport default Title;\r\n","import React from \"react\"\r\n\r\nconst Form = props => (\r\n    <form onSubmit={props.weatherMethod}>\r\n        <input type=\"text\" name=\"city\" placeholder=\"City\"></input>\r\n        <button>Get weather forecast</button>\r\n    </form>\r\n);\r\n\r\nexport default Form;","import React from \"react\"\r\n\r\nconst Weather = props => (\r\n    <div className=\"weatherDiv\">\r\n        { props.temp &&\r\n            <div>\r\n                <p>Location: {props.city}, {props.country}</p>\r\n                <p>Temperature: {props.temp} Â°C </p>\r\n                <p>Wind speed: {props.wind} m/s </p>\r\n            </div>\r\n        }\r\n        <p>{props.error}</p>\r\n    </div>\r\n);\r\n\r\nexport default Weather;","import React from \"react\";\nimport Title from \"./components/title\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\n\nconst API = \"11946a85ee67815615487da027c7e9d1\";\nconst API2 = \"a49328c7264e433eb4f142910191705\";\nclass App extends React.Component {\n  state = {\n    temp: undefined,\n    city: undefined,\n    country: undefined,\n    wind: undefined,\n    error: undefined,\n    temp2: undefined,\n    city2: undefined,\n    country2: undefined,\n    wind2: undefined,\n    error2: undefined,\n    isActiveOpenWeatherMap: false,\n    isActiveApixu: false\n  }\n\n  gettingWeather = async (evt) => {\n    evt.preventDefault();\n    const city = evt.target.elements.city.value;\n      \n    if(city) {\n      const api_url = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API}&units=metric`);\n      const data = await api_url.json();\n      \n      this.setState({\n        temp: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        wind: data.wind.speed,\n        error: undefined,\n        time: true\n      });\n      } else {\n        this.setState({\n          temp: undefined,\n          city: undefined,\n          country: undefined,\n          wind: undefined,\n          error: \"Enter the name of the city!\"\n        });\n      }\n  }\n\n  gettingWeatherApixu = async (evt) => {\n    evt.preventDefault();\n    const city = evt.target.elements.city.value;\n        \n    if(city) {\n      const api_url = await fetch(`https://api.apixu.com/v1/current.json?key=${API2}&q=${city}`);\n      const data = await api_url.json();\n      this.setState({\n        temp2: data.current.temp_c,\n        city2: data.location.name,\n        country2: data.location.country,\n        wind2: data.current.wind_mph,\n        error2: undefined\n      });\n      } else {\n        this.setState({\n          temp2: undefined,\n          city2: undefined,\n          country2: undefined,\n          wind2: undefined,\n          error2: \"Enter the name of the city!\"\n        });\n      }\n  }\n\n  getOpenWeatherMap = () => {\n    this.setState({\n      isActiveOpenWeatherMap: !this.state.isActiveOpenWeatherMap\n    });\n  }\n\n  getApixu = () => {\n    this.setState({\n      isActiveApixu: !this.state.isActiveApixu\n    });\n  } \n\n  render() {\n    return (\n      <div className=\"mainDiv\">\n        <h1>Select weather service</h1>\n        <button onClick={this.getOpenWeatherMap}>Follow OpenWeatherMap</button>\n        <button onClick={this.getApixu}>Follow Apixu</button>\n        { this.state.isActiveOpenWeatherMap ? \n        (<div>\n        <Title site=\"OpenWeatherMap\"/>\n        <Form weatherMethod={this.gettingWeather}/>\n        <Weather\n          temp={this.state.temp}\n          city={this.state.city}\n          country={this.state.country}\n          wind={this.state.wind}\n          error={this.state.error}\n        />\n        </div>) : null}\n        { this.state.isActiveApixu ? \n        (<div>\n        <Title site=\"Apixu\"/>\n        <Form weatherMethod={this.gettingWeatherApixu}/>\n        <Weather\n          temp={this.state.temp2}\n          city={this.state.city2}\n          country={this.state.country2}\n          wind={this.state.wind2}\n          error={this.state.error2}\n        />\n        </div>) : null}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}